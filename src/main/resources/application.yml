#server.port: 3032
#server:
#  error:
#    include-message: always
#    include-binding-errors: always
#
#spring:
#  datasource:
#    password:
#    url: jdbc:postgresql://localhost:5432/registration
#    username:
#  jpa:
#    hibernate:
#      ddl-auto: create-drop
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.PostgreSQLDialect
#        format_sql: true
#    show-sql: true
#
#  mail:
#    host: localhost
#    port: 1025
#    username: hello
#    password: hello
#
#
#  spring.mail.host=localhost
#  spring.mail.port=1025
#  spring.mail.username= hello
#  spring.mail.password= hello
#  spring.mail.properties.mail.smtp.auth=true
#  spring.mail.properties.mail.smtp.starttls.enable=true
#
#
#
#
#    properties:
#      mail:
#        smtp:
#          ssl:
#            trust: "*"
#          auth: true
#          starttls:
#            enable: true
#          connectiontimeout: 5000
#          timeout: 3000
#          writetimeout: 5000
#



# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url: jdbc:postgresql://localhost:5432/tera?serverTimezone=UTC
spring.datasource.username: postgres
spring.datasource.password: SOMI
spring.datasource.driver-class-name: org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle: true
spring.datasource.validationQuery: SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql: true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto: update

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect

spring.jpa.properties.hibernate.jdbc.time_zone: UTC
#
spring.mail.host : localhost
spring.mail.port : 1025
spring.mail.userName : hello
spring.mail.password : hello
spring.mail.properties.mail.smtp.auth: true
spring.mail.properties.mail.smtp.starttls.enable: true


spring.session.store-type: jdbc
spring.session.jdbc.initialize-schema: always
spring.session.format.time: dd-MM-yyyy
spring.mvc.format.date: dd-MM-yyyy
